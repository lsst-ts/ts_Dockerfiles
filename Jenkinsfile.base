pipeline {
    agent any
    environment {
        registryCredential = "dockerhub-lssttsadmin"
        dockerImageNameBuild = "lsstts/base-env:${image_tag}_${params.user_id}_${params.group_id}"
        dockerImageBuild = ""
    }
    parameters {
        string defaultValue: 'w_latest', description: 'lsstsqre/centos image tag.', name: 'image_tag', trim: false
        string defaultValue: '1000', description: 'UID for saluser.', name: 'user_id', trim: false
        string defaultValue: '1000', description: 'GID for saluser.', name: 'group_id', trim: false
    }
    stages {
        stage("Build Docker image") {
            steps {
                script {
                    dockerImageBuild = docker.build(dockerImageNameBuild, "--no-cache --build-arg image_tag=${params.image_tag} --build-arg UID=${params.user_id} --build-arg GID=${params.group_id} ./develop-env/base/")
                }
            }
        }

        stage("Push Docker image") {
            steps {
                script {
                    docker.withRegistry("", registryCredential) {
                    dockerImageBuild.push()
                    }
                }
            }
        }
    }
}
